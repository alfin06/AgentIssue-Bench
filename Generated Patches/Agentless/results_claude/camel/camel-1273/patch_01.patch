diff --git a/camel/utils/commons.py b/camel/utils/commons.py
index ab4cdb4..bf9698c 100644
--- a/camel/utils/commons.py
+++ b/camel/utils/commons.py
@@ -275,16 +275,26 @@ def api_keys_required(*required_keys: str) -> Callable[[F], F]:
     def decorator(func: F) -> F:
         @wraps(func)
         def wrapper(*args: Any, **kwargs: Any) -> Any:
+            # Check environment variables first
             missing_environment_keys = [
                 k for k in required_keys if k not in os.environ
             ]
-            if (
-                not (args and getattr(args[0], '_api_key', None))
-                and missing_environment_keys
-            ):
-                raise ValueError(
-                    f"Missing API keys: {', '.join(missing_environment_keys)}"
-                )
+            
+            # If no environment variables, check if api_key is passed as argument
+            if missing_environment_keys:
+                has_api_key = False
+                # Check in instance attribute
+                if args and getattr(args[0], '_api_key', None):
+                    has_api_key = True
+                # Check in function arguments
+                elif 'api_key' in kwargs or (len(args) > 1 and args[1]):
+                    has_api_key = True
+                
+                if not has_api_key:
+                    raise ValueError(
+                        f"Missing API keys: {', '.join(missing_environment_keys)}"
+                    )
+            
             return func(*args, **kwargs)
 
         return cast(F, wrapper)