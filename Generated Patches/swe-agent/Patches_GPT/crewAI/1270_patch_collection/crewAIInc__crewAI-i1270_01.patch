diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 0000000..3ca1da9
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,25 @@
+import os
+from pathlib import Path
+
+# Create a sample YAML file with GBK encoding
+sample_yaml_path = Path('sample_gbk.yaml')
+sample_content = 'name: 测试\nage: 25'
+with open(sample_yaml_path, 'w', encoding='gbk') as f:
+    f.write(sample_content)
+
+# Test the load_yaml function
+from src.crewai.project.crew_base import CrewBase
+
+class DummyClass:
+    pass
+
+WrappedClass = CrewBase(DummyClass)
+instance = WrappedClass()
+try:
+    result = instance.load_yaml(sample_yaml_path)
+    print('YAML content loaded successfully:', result)
+except Exception as e:
+    print('Error loading YAML file:', e)
+
+# Clean up
+os.remove(sample_yaml_path)
diff --git a/sample_gbk.yaml b/sample_gbk.yaml
new file mode 100644
index 0000000..429347a
--- /dev/null
+++ b/sample_gbk.yaml
@@ -0,0 +1,2 @@
+name: \xb2\xe2\xca\xd4
+age: 25
\ No newline at end of file
diff --git a/src/crewai/project/crew_base.py b/src/crewai/project/crew_base.py
index 53d3d5f..6b6ae04 100644
--- a/src/crewai/project/crew_base.py
+++ b/src/crewai/project/crew_base.py
@@ -4,6 +4,7 @@ from pathlib import Path
 from typing import Any, Callable, Dict, TypeVar, cast
 
 import yaml
+import chardet
 from dotenv import load_dotenv
 
 load_dotenv()
@@ -107,7 +108,11 @@ def CrewBase(cls: T) -> T:
         @staticmethod
         def load_yaml(config_path: Path):
             try:
-                with open(config_path, "r", encoding="utf-8") as file:
+                with open(config_path, "rb") as file:
+    raw_data = file.read()
+    detected_encoding = chardet.detect(raw_data)['encoding']
+
+with open(config_path, "r", encoding=detected_encoding) as file:
                     return yaml.safe_load(file)
             except FileNotFoundError:
                 print(f"File not found: {config_path}")
