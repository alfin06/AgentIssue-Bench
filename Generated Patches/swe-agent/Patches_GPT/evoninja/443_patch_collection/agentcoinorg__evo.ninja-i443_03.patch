diff --git a/apps/cli/src/cli.ts b/apps/cli/src/cli.ts
index 9af65fb..c1c4629 100644
--- a/apps/cli/src/cli.ts
+++ b/apps/cli/src/cli.ts
@@ -9,6 +9,7 @@ export async function cli(): Promise<void> {
     .option("-t, --timeout <seconds>")
     .option("-r, --root <path>")
     .option("-d, --debug")
+    .option("-c, --continuous", "Enable continuous mode for automatic follow-up goals")
     .parse();
 
   const options = program.opts();
@@ -75,7 +76,7 @@ export async function cli(): Promise<void> {
   let goalCounter = 0;
 
   await app.evo.init();
-  while (true) {
+  while (options.continuous || true) {
     if (!goal) {
       goal = await app.logger.prompt("Enter your goal");
     } else if (goalCounter === 0) {
diff --git a/apps/cli/test_continuous_mode.py b/apps/cli/test_continuous_mode.py
new file mode 100644
index 0000000..73b38f3
--- /dev/null
+++ b/apps/cli/test_continuous_mode.py
@@ -0,0 +1,18 @@
+import subprocess
+
+def test_continuous_mode():
+    process = subprocess.Popen(
+        ['ts-node', 'src/cli.ts', '--continuous'],
+        stdout=subprocess.PIPE,
+        stderr=subprocess.PIPE
+    )
+    try:
+        stdout, stderr = process.communicate(timeout=10)
+        print("STDOUT:", stdout.decode())
+        print("STDERR:", stderr.decode())
+    except subprocess.TimeoutExpired:
+        process.kill()
+        print("Process timed out")
+
+if __name__ == "__main__":
+    test_continuous_mode()
\ No newline at end of file
