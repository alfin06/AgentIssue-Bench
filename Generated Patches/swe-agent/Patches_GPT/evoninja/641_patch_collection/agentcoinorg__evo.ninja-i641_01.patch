diff --git a/apps/browser/lib/hooks/useEvoService.ts b/apps/browser/lib/hooks/useEvoService.ts
index 36b1812..fa252f8 100644
--- a/apps/browser/lib/hooks/useEvoService.ts
+++ b/apps/browser/lib/hooks/useEvoService.ts
@@ -224,13 +224,16 @@ export const useEvoService = (
   };
 
   useEffect(() => {
-    if (chatId) {
-      connectEvoService(chatId);
-    } else {
-      if (evoService.current) {
-        disconnectEvoService();
+    const manageEvoServiceConnection = async () => {
+      if (chatId) {
+        await connectEvoService(chatId);
+      } else {
+        if (evoService.current) {
+          disconnectEvoService();
+        }
       }
-    }
+    };
+    manageEvoServiceConnection();
   }, [chatId]);
 
   return {
diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 0000000..880d40b
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,41 @@
+import requests
+import time
+
+# Step 1: Create a new chat
+print("Creating a new chat...")
+response = requests.post("http://localhost:3000/api/chat/create", json={"title": "hey.txt"})
+if response.status_code == 200:
+    chat_id = response.json().get("id")
+    print(f"Chat created with ID: {chat_id}")
+else:
+    print("Failed to create chat.")
+    exit(1)
+
+# Step 2: Navigate to the root
+print("Navigating to the root...")
+time.sleep(2)  # Simulate navigation delay
+response = requests.get("http://localhost:3000/")
+if response.status_code == 200:
+    print("Successfully navigated to the root.")
+else:
+    print("Failed to navigate to the root.")
+    exit(1)
+
+# Step 3: Click the "csv" example prompt
+print("Clicking the 'csv' example prompt...")
+time.sleep(2)  # Simulate user interaction delay
+response = requests.post("http://localhost:3000/api/chat/goal", json={"chatId": chat_id, "goal": "csv"})
+if response.status_code == 200:
+    print("Successfully clicked the 'csv' example prompt.")
+else:
+    print("Failed to click the 'csv' example prompt.")
+    exit(1)
+
+# Step 4: Observe workspace transition issue
+print("Observing workspace transition...")
+time.sleep(2)  # Simulate observation delay
+response = requests.get(f"http://localhost:3000/api/workspace/{chat_id}")
+if response.status_code == 200:
+    print("Workspace transition successful.")
+else:
+    print("Workspace transition failed.")
\ No newline at end of file
