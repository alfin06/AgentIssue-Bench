From 97309e8055eca1f4828a3c4dc12d68c590412110 Mon Sep 17 00:00:00 2001
From: unknown <12145726+rihp@users.noreply.github.com>
Date: Thu, 2 Nov 2023 15:28:09 +0100
Subject: [PATCH 1/3] cont mode prototype

---
 apps/cli/src/cli.ts | 59 ++++++++++++++++++++++++---------------------
 1 file changed, 32 insertions(+), 27 deletions(-)

diff --git a/apps/cli/src/cli.ts b/apps/cli/src/cli.ts
index 68a56c43..ff046591 100644
--- a/apps/cli/src/cli.ts
+++ b/apps/cli/src/cli.ts
@@ -1,11 +1,9 @@
 import { createApp } from "./app";
-
 import { Logger, Timeout } from "@evo-ninja/agent-utils";
 import { program } from "commander";
 
 export async function cli(): Promise<void> {
   program
-    .argument("[goal]", "Goal to be achieved")
     .option("-s, --session <name>")
     .option("-t, --timeout <seconds>")
     .option("-r, --root <path>")
@@ -18,8 +16,8 @@ export async function cli(): Promise<void> {
   const timeout = new Timeout(
     options.timeout,
     (logger: Logger): void => {
-      logger.error("Agent has timeout");
-      process.exit(0);
+      logger.error("Agent has timed out");
+      process.exit(1);
     },
   );
 
@@ -28,27 +26,21 @@ export async function cli(): Promise<void> {
     rootDir: options.root,
     debug: options.debug,
     messagesPath: options.messages,
-    sessionName: options.session
+    sessionName: options.session,
   });
 
   await app.logger.logHeader();
 
-  let goal: string | undefined = program.args[0]
-
-  if (!goal && !options.messages) {
-    goal = await app.logger.prompt("Enter your goal: ");
-  }
-
-  app.debugLog?.goalStart(goal);
-
-  let iterator = options.messages ? app.evo.runWithChat([...app.chat.messages]) : app.evo.run({ goal });
-
-  while(true) {
-    app.debugLog?.stepStart();
+  // Refactored goal handling into a separate async function
+  async function handleGoal(goal: string) {
+    app.debugLog?.goalStart(goal);
 
-    const response = await iterator.next();
+    let iterator = options.messages ? app.evo.runWithChat([...app.chat.messages]) : app.evo.run({ goal });
 
-    app.debugLog?.stepEnd();
+    while (true) {
+      app.debugLog?.stepStart();
+      const response = await iterator.next();
+      app.debugLog?.stepEnd();
 
     const logMessage = (message: any) => {
       const messageStr = `${message.title}\n${message.content}`;
@@ -77,15 +69,28 @@ export async function cli(): Promise<void> {
   }
 
   app.debugLog?.goalEnd();
+};
 
-  return Promise.resolve();
+// Loop to handle multiple goals
+while (true) {
+  let goal = program.args.shift(); // Get the next goal from the args array
+
+  if (!goal) {
+    goal = await app.logger.prompt("Enter your next goal: ");
+    if (!goal) break; // Exit if no goal is provided
+  }
+
+  await handleGoal(goal);
+}
+
+return Promise.resolve();
 }
 
 cli()
-  .then(() => {
-    process.exit();
-  })
-  .catch((err) => {
-    console.error(err);
-    process.abort();
-  });
+.then(() => {
+  process.exit(0);
+})
+.catch((err) => {
+  console.error(err);
+  process.abort();
+});
\ No newline at end of file

From cd898273234e041adcfd8ab8d9674e21cd23c7ed Mon Sep 17 00:00:00 2001
From: unknown <12145726+rihp@users.noreply.github.com>
Date: Thu, 2 Nov 2023 15:38:00 +0100
Subject: [PATCH 2/3] continuous mode example

---
 apps/cli/src/cli.ts | 15 +++++++++++----
 1 file changed, 11 insertions(+), 4 deletions(-)

diff --git a/apps/cli/src/cli.ts b/apps/cli/src/cli.ts
index ff046591..ee931c60 100644
--- a/apps/cli/src/cli.ts
+++ b/apps/cli/src/cli.ts
@@ -71,15 +71,22 @@ export async function cli(): Promise<void> {
   app.debugLog?.goalEnd();
 };
 
+let firstGoalEntered = false;
+
 // Loop to handle multiple goals
 while (true) {
-  let goal = program.args.shift(); // Get the next goal from the args array
+  let goal: string;
 
-  if (!goal) {
-    goal = await app.logger.prompt("Enter your next goal: ");
-    if (!goal) break; // Exit if no goal is provided
+  if (!firstGoalEntered) {
+    goal = await app.logger.prompt("Enter your goal: "); // Prompt for the first goal
+    firstGoalEntered = true; // Set this to ensure we don't ask to enter the goal again
+  } else {
+    goal = await app.logger.prompt("Provide feedback: "); // Prompt for feedback after the first goal
   }
 
+  if (!goal) break; // Exit if no goal or feedback is provided
+
+  console.log(`Goal: ${goal}`);
   await handleGoal(goal);
 }
 

From b19f9297e3aa9ee60f15c70408b440d9cbebb4f4 Mon Sep 17 00:00:00 2001
From: unknown <12145726+rihp@users.noreply.github.com>
Date: Thu, 2 Nov 2023 15:40:53 +0100
Subject: [PATCH 3/3] remove console log

---
 apps/cli/src/cli.ts | 1 -
 1 file changed, 1 deletion(-)

diff --git a/apps/cli/src/cli.ts b/apps/cli/src/cli.ts
index ee931c60..c800b295 100644
--- a/apps/cli/src/cli.ts
+++ b/apps/cli/src/cli.ts
@@ -86,7 +86,6 @@ while (true) {
 
   if (!goal) break; // Exit if no goal or feedback is provided
 
-  console.log(`Goal: ${goal}`);
   await handleGoal(goal);
 }
 